<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gün Sonu</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
    <link href="/css/musteriler.css" rel="stylesheet">
    <link href="/css/cariekstre.css" rel="stylesheet">
    <style>
        .gunsonu-wrap { margin-left: 250px; padding: 20px; }
        .filters { display:flex; gap:10px; align-items:center; margin-bottom: 16px; }
        /* summary-cards stili cariekstre.css'den yüklenecek */
        .tab-pane { padding-top: 10px; }
        .table thead th { white-space: nowrap; }
    </style>
</head>

<body>
    <%- include('../sidebar') %>


    <div class="gunsonu-wrap main-content">
        <div class="gunsonu-container">
            <div class="page-header">
                <h1 class="page-title">Gün Sonu</h1>
                <div class="action-buttons">
                    <div class="export-buttons">
                        <a href="/hizlisatis" class="btn btn-outline-secondary"><i class="fa fa-arrow-left"></i> Hızlı Satış</a>

                        <button class="btn btn-outline-success btn-export" onclick="exportToExcel()">
                            <i class="fas fa-file-excel"></i> Excel
                        </button>
                        <button class="btn btn-outline-danger btn-export" onclick="exportToPDF()">
                            <i class="fas fa-file-pdf"></i> PDF
                        </button>
                        <button class="btn btn-outline-primary btn-export" onclick="printReport()">
                            <i class="fas fa-print"></i> Yazdır
                        </button>
                    </div>
                </div>
            </div>

            <!-- Filtreler -->
            <div class="filters">
                <div>
                    <label class="form-label m-0">Başlangıç</label>
                    <input id="fStart" type="date" class="form-control" style="min-width: 180px;">
                </div>
                <div>
                    <label class="form-label m-0">Bitiş</label>
                    <input id="fEnd" type="date" class="form-control" style="min-width: 180px;">
                </div>
                <div>
                    <label class="form-label m-0">Saat</label>
                    <div class="d-flex" style="gap:6px">
                        <input id="fStartTime" type="time" class="form-control" style="min-width:140px;">
                        <input id="fEndTime" type="time" class="form-control" style="min-width:140px;">
                    </div>
                </div>
                <button class="btn btn-primary" onclick="loadAllTabs()"><i class="fa fa-search"></i> Listele</button>
            </div>


            <!-- Sekmeler -->
            <ul class="nav nav-tabs" id="gsTabs" role="tablist">
                <li class="nav-item" role="presentation"><button class="nav-link active" data-bs-toggle="tab" data-bs-target="#tabGenel" type="button">Genel</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#tabKart" type="button">Kredi Kartı</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#tabNakit" type="button">Nakit</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#tabVeresiye" type="button">Veresiye</button></li>
            </ul>
            <div id="summaryHolder" class="mt-2"></div>

            <div class="tab-content" id="gsContent">
                <div class="tab-pane fade show active" id="tabGenel"></div>
                <div class="tab-pane fade" id="tabKart"></div>
                <div class="tab-pane fade" id="tabNakit"></div>
                <div class="tab-pane fade" id="tabVeresiye"></div>
            </div>
    </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const today = new Date();
            const yyyy_mm_dd = today.toISOString().slice(0,10);
            document.getElementById('fStart').value = yyyy_mm_dd;
            document.getElementById('fEnd').value = yyyy_mm_dd;
            document.getElementById('fStartTime').value = '00:00';
            document.getElementById('fEndTime').value = '23:59';
            loadAllTabs();
        });

        function buildRangeQuery(type){
            const s = document.getElementById('fStart').value;
            const e = document.getElementById('fEnd').value;
            // Saat şu anlık bilgi amaçlı; istenirse backend sorgusuna dahil edilebilir
            const t = type ? `&type=${encodeURIComponent(type)}` : '';
            return `?start=${encodeURIComponent(s)}&end=${encodeURIComponent(e)}${t}`;
        }

        async function fetchLines(type){
            const q = buildRangeQuery(type);
            const r = await fetch(`/api/gunsonu-lines${q}`);
            const j = await r.json();
            if(!j.success) throw new Error('Veri alınamadı');
            return j.data || [];
        }

        function summarize(lines){
            let toplam = 0; let adet = 0;
            for(const l of lines){ toplam += Number(l.tutar||0); adet += Number(l.miktar||0); }
            return { toplam, adet };
        }

        function renderTable(lines){
            const head = `<thead><tr>
                <th>Fiş No</th><th>Tarih</th><th>Cari</th>
                <th>Ürün</th><th class="text-end">Miktar</th><th>Birim</th>
                <th class="text-end">KDV%</th><th class="text-end">Tutar</th><th>Ödeme</th>
                <th class="text-end">Nakit</th><th class="text-end">Kart</th>
            </tr></thead>`;
            const rows = (lines||[]).map(l=>`<tr>
                <td>${l.fis_no||''}</td>
                <td>${new Date(l.tarih).toLocaleDateString('tr-TR')}</td>
                <td>${l.cari||''}</td>
                <td>${l.urun_adi||''}</td>
                <td class="text-end">${Number(l.miktar||0)}</td>
                <td>${l.birim||''}</td>
                <td class="text-end">${Number(l.kdvorani||0)}</td>
                <td class="text-end">${Number(l.tutar||0).toFixed(2)}
                    ${Number(l.iskontotutar||0)>0?`<div class='text-danger small'>- ${Number(l.iskontotutar||0).toFixed(2)} ₺ ${Number(l.iskontorani||0)>0?`(%${Number(l.iskontorani)})`:''}</div>`:''}
                </td>
                <td>${l.satirtipi==1?'Kredi Kartı':(l.satirtipi==0?'Nakit':'Veresiye')}</td>
                <td class="text-end">${Number(l.nakittoplam||0).toFixed(2)}</td>
                <td class="text-end">${Number(l.bankatoplam||0).toFixed(2)}</td>
            </tr>`).join('');
            return `<table class="table table-striped table-sm">${head}<tbody>${rows}</tbody></table>`;
        }

        function renderSummary(count, adet, toplam){
            return `
                <div class="summary-cards">
                    <div class="summary-card">
                        <div class="value">${count}</div>
                        <div class="label">Toplam Satır</div>
                    </div>
                    <div class="summary-card">
                        <div class="value">${adet}</div>
                        <div class="label">Toplam Miktar</div>
                    </div>
                    <div class="summary-card">
                        <div class="value">${Number(toplam||0).toFixed(2)} ₺</div>
                        <div class="label">Toplam Tutar</div>
                    </div>
                </div>
            `;
        }

        let gsSummaries = {};

        async function loadAllTabs(){
            const [genel, kart, nakit, veresiye] = await Promise.all([
                fetchLines('genel'),
                fetchLines('kart'),
                fetchLines('nakit'),
                fetchLines('veresiye')
            ]);

            const sumG = summarize(genel);
            const sumK = summarize(kart);
            const sumN = summarize(nakit);
            const sumV = summarize(veresiye);

            document.getElementById('tabGenel').innerHTML = `${renderTable(genel)}`;
            document.getElementById('tabKart').innerHTML = `${renderTable(kart)}`;
            document.getElementById('tabNakit').innerHTML = `${renderTable(nakit)}`;
            document.getElementById('tabVeresiye').innerHTML = `${renderTable(veresiye)}`;

            gsSummaries = {
                tabGenel: { count: genel.length, adet: sumG.adet, toplam: sumG.toplam },
                tabKart: { count: kart.length, adet: sumK.adet, toplam: sumK.toplam },
                tabNakit: { count: nakit.length, adet: sumN.adet, toplam: sumN.toplam },
                tabVeresiye: { count: veresiye.length, adet: sumV.adet, toplam: sumV.toplam }
            };

            updateSummaryForTab('tabGenel');
        }

        function updateSummaryForTab(tabId){
            const holder = document.getElementById('summaryHolder');
            const s = gsSummaries[tabId];
            if(!s){ holder.innerHTML = ''; return; }
            holder.innerHTML = renderSummary(s.count, s.adet, s.toplam);
        }

        // Sekme değişiminde özet kartları güncelle
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('#gsTabs button[data-bs-toggle="tab"]').forEach(btn => {
                btn.addEventListener('shown.bs.tab', (e) => {
                    const targetId = e.target.getAttribute('data-bs-target').replace('#','');
                    updateSummaryForTab(targetId);
                });
            });
        });
    </script>
</body>

</html>


