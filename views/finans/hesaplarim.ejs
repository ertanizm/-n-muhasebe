<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mutabık - Müşteriler</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
    <link href="/css/hesaplarim.css" rel="stylesheet">
</head>
<body>
    <%- include('../sidebar') %>

    <div class="main-content">
        <div class="btn-group-custom">
            <div class="dropdown d-inline-block">
                <button style="background-color: #228dcd;" class="btn btn-custom dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    <i class="fas fa-plus"></i> Yeni Hesap Ekle
                </button>
                <ul class="dropdown-menu dropdown-menu-custom">
                    <li><a class="dropdown-item dropdown-item-custom" onclick="showKasaForm()">Kasa Ekle</a></li>
                    <li><a class="dropdown-item dropdown-item-custom" onclick="showBankaForm()">Banka Hesabı Ekle</a></li>
                    <li><a class="dropdown-item dropdown-item-custom" onclick="showPosForm()">POS Hesabı Ekle</a></li>
                </ul>
            </div>
        </div>

        <!-- Ana İçerik Alanları -->
        <div class="row row-gap">
            <!-- Sol Kolon -->
            <div class="col-md-6">
                <!-- POS HESAPLARI -->
                <div class="dashboard-card">
                    <div class="card-header">
                        POS HESAPLARI
                        <div class="info-icon">
                            <i class="fas fa-question"></i>
                        </div>
                    </div>
                    <div class="card-body" id="pos-container">
                        <% let poslar = hesaplar.filter(h => h.tip === 2); %>
                        <% if (poslar.length === 0) { %>
                            <div class="amount-display">
                                <div class="currency-label"></div>
                                <div class="currency-amount"></div>
                            </div>
                        <% } else { %>
                            <% poslar.forEach(function(pos) { %>
                                <div class="amount-display pos-item" data-id="<%= pos.id %>">
                                    <div class="currency-label"><%= pos.tanimi %> (<%= pos.posbankasi %>)</div>
                                    <div class="currency-amount"><%= pos.parabirimi %> <%= Number(pos.guncelbakiye).toLocaleString('tr-TR', {minimumFractionDigits:2}) %></div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>

                <!-- KASALAR -->
                <div class="dashboard-card">
                    <div class="card-header">
                        KASALAR
                        <div class="info-icon">
                            <i class="fas fa-question"></i>
                        </div>
                    </div>
                    <div class="card-body" id="kasalar-container">
                        <% let kasalar = hesaplar.filter(h => h.tip === 0); %>
                        <% if (kasalar.length === 0) { %>
                            <div class="amount-display">
                                <div class="currency-label"></div>
                                <div class="currency-amount"></div>
                            </div>
                        <% } else { %>
                            <% kasalar.forEach(function(kasa) { %>
                                <div class="amount-display kasa-item" data-id="<%= kasa.id %>">
                                    <div class="currency-label"><%= kasa.tanimi %></div>
                                    <div class="currency-amount"><%= kasa.parabirimi %> <%= Number(kasa.guncelbakiye).toLocaleString('tr-TR', {minimumFractionDigits:2}) %></div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Sağ Kolon -->
            <div class="col-md-6">
                <!-- Kasa Ekleme Formu -->
                <div class="kasa-form" id="kasaForm">
                    <h5 style="margin-bottom: 20px; color: #333;">Yeni Kasa Ekle</h5>
                    <form id="yeniKasaForm">
                        <div class="form-group">
                            <label class="form-label">Kasa Tanımı</label>
                            <input type="text" class="form-control" id="kasaTanimi" placeholder="Kasa adını giriniz" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Para Birimi</label>
                            <select class="form-control" id="paraBirimi" required>
                                <option value="">Para birimi seçiniz</option>
                                <option value="TL">TL - Türk Lirası</option>
                                <option value="USD">USD - Amerikan Doları</option>
                                <option value="EUR">EUR - Euro</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Güncel Bakiye</label>
                            <input type="number" class="form-control" id="guncelBakiye" placeholder="0,00" step="0.01" required>
                        </div>
                        <div style="margin-top: 20px;">
                            <button type="submit" class="btn-success">Kaydet</button>
                            <button type="button" class="btn-secondary" onclick="hideKasaForm()">İptal</button>
                        </div>
                    </form>
                </div>

                <!-- POS Ekleme Formu -->
                <div class="kasa-form" id="posForm">
                    <h5 style="margin-bottom: 20px; color: #333;">Yeni POS Hesabı Ekle</h5>
                    <form id="yeniPosForm">
                        <div class="form-group">
                            <label class="form-label">POS Tanımı</label>
                            <input type="text" class="form-control" id="posTanimi" placeholder="POS adını giriniz" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Para Birimi</label>
                            <select class="form-control" id="posParaBirimi" required>
                                <option value="">Para birimi seçiniz</option>
                                <option value="TL">TL - Türk Lirası</option>
                                <option value="USD">USD - Amerikan Doları</option>
                                <option value="EUR">EUR - Euro</option>
                            </select>
                            <label class="form-label">Pos Bankası</label>
                            <select class="form-control" id="posBankaTanimi" required>
                                <option value="">POS'a ait banka seçiniz</option>
                                <option value="TL">AKBANK</option>
                                <option value="USD">GARANTİ</option>
                                <option value="EUR">FİNANSBANK  </option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Güncel Bakiye</label>
                            <input type="number" class="form-control" id="posGuncelBakiye" placeholder="0,00" step="0.01" required>
                        </div>
                        <div style="margin-top: 20px;">
                            <button type="submit" class="btn-success">Kaydet</button>
                            <button type="button" class="btn-secondary" onclick="hidePosForm()">İptal</button>
                        </div>
                    </form>
                </div>

                <!-- Banka Hesabı Ekleme Formu -->
                <div class="kasa-form" id="bankaForm">
                    <h5 style="margin-bottom: 20px; color: #333;">Yeni Banka Hesabı Ekle</h5>
                    <form id="yeniBankaForm">
                        <div class="form-group">
                            <label class="form-label">Banka Hesabı Tanımı</label>
                            <input type="text" class="form-control" id="bankaTanimi" placeholder="Banka hesabı adını giriniz" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Para Birimi</label>
                            <select class="form-control" id="bankaParaBirimi" required>
                                <option value="">Para birimi seçiniz</option>
                                <option value="TL">TL - Türk Lirası</option>
                                <option value="USD">USD - Amerikan Doları</option>
                                <option value="EUR">EUR - Euro</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Güncel Bakiye</label>
                            <input type="number" class="form-control" id="bankaGuncelBakiye" placeholder="0,00" step="0.01" required>
                        </div>
                        <div style="margin-top: 20px;">
                            <button type="submit" class="btn-success">Kaydet</button>
                            <button type="button" class="btn-secondary" onclick="hideBankaForm()">İptal</button>
                        </div>
                    </form>
                </div>

                <!-- Banka Hesapları -->
                <div class="dashboard-card">
                    <div class="card-header banka-header">
                        BANKA HESAPLARI
                        <div class="total-amount">
                            <% 
                                let bankalar = hesaplar.filter(h => h.tip === 1);
                                let toplam = bankalar.reduce((acc, b) => acc + Number(b.guncelbakiye), 0);
                            %>
                            <%= toplam.toLocaleString('tr-TR', {minimumFractionDigits:2}) %> TL
                        </div>
                    </div>
                    <div class="card-body" id="banka-container">
                        <div class="currency-tabs">
                            <% if (bankalar.length === 0) { %>
                                <div class="currency-tab">
                                    <div class="currency-label">Banka Hesabı</div>
                                    <div class="currency-amount">TL 0,00</div>
                                </div>
                            <% } else { %>
                                <% bankalar.forEach(function(banka) { %>
                                    <div class="currency-tab banka-item" data-id="<%= banka.id %>">
                                        <div class="currency-label"><%= banka.tanimi %></div>
                                        <div class="currency-amount"><%= banka.parabirimi %> <%= Number(banka.guncelbakiye).toLocaleString('tr-TR', {minimumFractionDigits:2}) %></div>
                                    </div>
                                <% }); %>
                            <% } %>
                        </div>
                    </div>
                </div>

                <!-- HESAP HAREKETLERİ TABLOSU -->
                <div id="hesapHareketleriPanel" class="hesap-hareketleri-panel">
                    <div class="hesap-hareketleri-header">
                        HESAP HAREKETLERİ
                        <button class="hesap-hareketleri-close" onclick="closeHareketPanel()">&times;</button>
                    </div>
                    <div class="hesap-hareketleri-table-wrapper">
                        <table class="hesap-hareketleri-table">
                            <thead>
                                <tr>
                                    <th>Tarih</th>
                                    <th>İşlem</th>
                                    <th>Kullanıcı</th>
                                    <th>Hesap</th>
                                    <th>Açıklama</th>
                                    <th>Borç</th>
                                    <th>Alacak</th>
                                </tr>
                            </thead>
                            <tbody id="hesapHareketleriBody">
                                <!-- JS ile doldurulacak -->
                                 <td>aa</td>
                                 <td>bb</td>
                                 <td>cc</td>
                                 <td>dd</td>
                                 <td>ee</td>
                                 <td>ff</td>
                                 <td>gg</td>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
          document.querySelectorAll('.currency-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.currency-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Kasa formu göster/gizle
        function showKasaForm() {
            hideAllForms();
            document.getElementById('kasaForm').style.display = 'block';
            document.querySelector('.dropdown-toggle').click();
        }

        function hideKasaForm() {
            document.getElementById('kasaForm').style.display = 'none';
            document.getElementById('yeniKasaForm').reset();
        }

        // POS formu göster/gizle
        function showPosForm() {
            hideAllForms();
            document.getElementById('posForm').style.display = 'block';
            document.querySelector('.dropdown-toggle').click();
        }

        function hidePosForm() {
            document.getElementById('posForm').style.display = 'none';
            document.getElementById('yeniPosForm').reset();
        }

        // Banka formu göster/gizle
        function showBankaForm() {
            hideAllForms();
            document.getElementById('bankaForm').style.display = 'block';
            document.querySelector('.dropdown-toggle').click();
        }

        function hideBankaForm() {
            document.getElementById('bankaForm').style.display = 'none';
            document.getElementById('yeniBankaForm').reset();
        }

        // Tüm formları gizle
        function hideAllForms() {
            document.getElementById('kasaForm').style.display = 'none';
            document.getElementById('posForm').style.display = 'none';
            document.getElementById('bankaForm').style.display = 'none';
        }

        function addSilmeEventi(selector, tipAd) {
            document.querySelectorAll(selector).forEach(function(div) {
                div.addEventListener('dblclick', async function() {
                    const id = this.dataset.id;
                    const tanim = this.querySelector('.currency-label').textContent;

                    const result = await Swal.fire({
                        title: 'Silmek istediğinize emin misiniz?',
                        text: `"${tanim}" ${tipAd} kaydı silinecek!`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'Vazgeç'
                    });

                    if (result.isConfirmed) {
                        const response = await fetch(`/hesaplarim/hesaplarim/${id}`, {
                            method: 'DELETE',
                            headers: { 'Content-Type': 'application/json' }
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire('Silindi!', 'Kayıt başarıyla silindi.', 'success');
                            this.remove();
                        } else {
                            Swal.fire('Hata!', data.message || 'Silme işlemi başarısız.', 'error');
                        }
                    }
                });
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Kasa formu
            document.getElementById('yeniKasaForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                const kasaTanimi = document.getElementById('kasaTanimi').value;
                const paraBirimi = document.getElementById('paraBirimi').value;
                const guncelBakiye = document.getElementById('guncelBakiye').value;

                if (!kasaTanimi || !paraBirimi || !guncelBakiye) {
                    Swal.fire('Uyarı', 'Lütfen tüm alanları doldurunuz!', 'warning');
                    return;
                }

                const response = await fetch('/hesaplarim/hesap-ekle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        tanimi: kasaTanimi,
                        parabirimi: paraBirimi,
                        guncelbakiye: guncelBakiye,
                        posbankasi: null,
                        tip: 0 // Kasa
                    })
                });

                if (response.ok) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'Kasa başarıyla eklendi!',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    hideKasaForm();
                    window.location.reload();
                } else {
                    Swal.fire('Hata!', 'Kasa eklenirken hata oluştu!', 'error');
                }
            });

            // POS formu
            document.getElementById('yeniPosForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                const posTanimi = document.getElementById('posTanimi').value;
                const paraBirimi = document.getElementById('posParaBirimi').value;
                const guncelBakiye = document.getElementById('posGuncelBakiye').value;
                const posBankasi = document.getElementById('posBankaTanimi').value;

                if (!posTanimi || !paraBirimi || !guncelBakiye || !posBankasi) {
                    Swal.fire('Uyarı', 'Lütfen tüm alanları doldurunuz!', 'warning');
                    return;
                }

                const response = await fetch('/hesaplarim/hesap-ekle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        tanimi: posTanimi,
                        parabirimi: paraBirimi,
                        guncelbakiye: guncelBakiye,
                        posbankasi: posBankasi,
                        tip: 2 // POS
                    })
                });

                if (response.ok) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'POS hesabı başarıyla eklendi!',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    hidePosForm();
                    window.location.reload();
                } else {
                    Swal.fire('Hata!', 'POS hesabı eklenirken hata oluştu!', 'error');
                }
            });

            // Banka formu
            document.getElementById('yeniBankaForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                const bankaTanimi = document.getElementById('bankaTanimi').value;
                const paraBirimi = document.getElementById('bankaParaBirimi').value;
                const guncelBakiye = document.getElementById('bankaGuncelBakiye').value;

                if (!bankaTanimi || !paraBirimi || !guncelBakiye) {
                    Swal.fire('Uyarı', 'Lütfen tüm alanları doldurunuz!', 'warning');
                    return;
                }

                const response = await fetch('/hesaplarim/hesap-ekle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        tanimi: bankaTanimi,
                        parabirimi: paraBirimi,
                        guncelbakiye: guncelBakiye,
                        posbankasi: null,
                        tip: 1 // Banka
                    })
                });

                if (response.ok) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'Banka hesabı başarıyla eklendi!',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    hideBankaForm();
                    window.location.reload();
                } else {
                    Swal.fire('Hata!', 'Banka hesabı eklenirken hata oluştu!', 'error');
                }
            });

            addSilmeEventi('.kasa-item', 'kasa');
            addSilmeEventi('.pos-item', 'POS');
            addSilmeEventi('.banka-item', 'banka');

            // Paneli aç/kapat fonksiyonları
            window.openHareketPanel = function() {
                var panel = document.getElementById('hesapHareketleriPanel');
                panel.style.display = 'block';
                panel.classList.add('active');
            }
            window.closeHareketPanel = function() {
                var panel = document.getElementById('hesapHareketleriPanel');
                panel.classList.remove('active');
                setTimeout(function() {
                    panel.style.display = 'none';
                }, 350); // animasyon süresiyle uyumlu
            }

            // Banka kutucuğuna tıklayınca hareketleri getir
            document.querySelectorAll('.banka-item').forEach(function(div) {
                div.addEventListener('click', function() {
                    // Seçili banka kutucuğunu vurgula
                    document.querySelectorAll('.banka-item').forEach(d => d.classList.remove('active-banka'));
                    this.classList.add('active-banka');

                    // ÖRNEK VERİ
                    const hareketler = [
                        {
                            tarih: '28.07.2025',
                            islem: 'Borç Fişi',
                            kullanici: 'ahmetmelih',
                            hesap: 'AKBANK',
                            aciklama: 'Açılış bakiyesi',
                            borc: 900,
                            alacak: 0
                        },
                        {
                            tarih: '29.07.2025',
                            islem: 'Havale',
                            kullanici: 'ahmetmelih',
                            hesap: 'AKBANK',
                            aciklama: 'Müşteriden ödeme',
                            borc: 0,
                            alacak: 500
                        }
                    ];

                    // Tabloyu doldur
                    const tbody = document.getElementById('hesapHareketleriBody');
                    tbody.innerHTML = '';
                    if (hareketler.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">Hareket bulunamadı.</td></tr>';
                    } else {
                        hareketler.forEach(h => {
                            tbody.innerHTML += `
                                <tr>
                                    <td>${h.tarih || ''}</td>
                                    <td>${h.islem || ''}</td>
                                    <td>${h.kullanici || ''}</td>
                                    <td>${h.hesap || ''}</td>
                                    <td>${h.aciklama || ''}</td>
                                    <td>${h.borc ? Number(h.borc).toLocaleString('tr-TR', {minimumFractionDigits:2}) : ''}</td>
                                    <td>${h.alacak ? Number(h.alacak).toLocaleString('tr-TR', {minimumFractionDigits:2}) : ''}</td>
                                </tr>
                            `;
                        });
                    }
                    document.getElementById('hesapHareketleriPanel').style.display = 'block';
                    openHareketPanel(); // Panel açılınca aktif et
                });
            });
        });

        // Banka toplam tutarını güncelle
        function updateBankaToplam() {
            let toplam = 0;
            document.querySelectorAll('#banka-container .currency-tab').forEach(tab => {
                const amountText = tab.querySelector('.currency-amount').textContent;
                const amount = parseFloat(amountText.replace(/[^\d,.-]/g, '').replace(',', '.'));
                if (!isNaN(amount)) {
                    toplam += amount;
                }
            });
            
            const formattedToplam = toplam.toLocaleString('tr-TR', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            
            document.querySelector('.total-amount').textContent = `${formattedToplam} TL`;
        }

        // Sayı formatlaması için input event
        document.getElementById('guncelBakiye').addEventListener('input', function(e) {
            const value = e.target.value;
            if (value && !isNaN(value)) {
                // Geçerli bir sayı ise işlem yap
            }
        });
    </script>
</body>
</html>
