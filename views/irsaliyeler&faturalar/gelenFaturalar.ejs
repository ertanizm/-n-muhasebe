<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gelen Faturalar</title>
    <link rel="stylesheet" href="/css/irsaliyeler.css">    <link href="/css/dashboard.css" rel="stylesheet">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body>
<%- include('../sidebar') %>
<div class="irsaliye-content">
    <div class="irsaliye-header">
        <div class="irsaliye-title">Gelen Faturalar</div>
        <button onclick="openModal()" class="btn btn-primary irsaliye-add-btn">
            <i class="fas fa-plus"></i> Fatura Ekle
        </button>
    </div>
    <!-- Gelen Faturalar Tablosu -->
    <div class="irsaliye-table-wrapper">
        <table class="table irsaliye-table">
            <thead>
                <tr>
                    <th>Fi≈ü No</th>
                    <th>Fatura No</th>
                    <th>Tarih</th>
                    <th>Cari</th>
                    <th>Tutar</th>
                    <th>Durum</th>
                    <th>A√ßƒ±klama</th>
                    <th style="text-align:right;">ƒ∞≈ülemler</th>
                </tr>
            </thead>
            <tbody id="faturaTableBody">
                <!-- Faturalar buraya JavaScript ile y√ºklenecek -->
            </tbody>
        </table>
    </div>
</div>

<!-- Modal -->
<div class="modal-overlay" id="faturaModal">
    <div class="modal-container">
       
        <div class="modal-body">
            <div class="modal-form">
                <!-- Tedarik√ßi -->
                <div class="form-section">
                    <div class="form-group">
                        <label class="form-label">TEDARƒ∞K√áƒ∞</label>
                        <div class="customer-search">
                            <input type="text" id="tedarikci" class="form-control" placeholder="Tedarik√ßi se√ßin" readonly />
                            <span class="search-icon" onclick="openCariModal()">üîç</span>
                        </div>
                        <label class="form-label">DEPO</label>
                        <div class="customer-search">
                            <input type="text" id="depo" class="form-control" placeholder="Depo se√ßin" readonly />
                            <span class="search-icon" onclick="openDepoModal()">üîç</span>
                        </div>
                        <label class="form-label">BELGE NO</label>
                        <div class="customer-search">
                            <input type="text" id="depo" class="form-control" placeholder="Belge numarasƒ± giriniz"  />
                        </div>
                        <label class="form-label">Fƒ∞ƒ∞Lƒ∞ SEVK TARƒ∞Hƒ∞</label>
                        <div class="customer-search">
                            <input type="date" id="fiiliSevkTarihi" class="form-control" value="2025-07-29" />
                        </div>
                    </div>
                </div>

                

                <!-- Adres Bilgileri -->
                <div class="form-section">
                    <div class="checkbox-inline">
                        <input type="checkbox" id="adresEkle" onclick="toggleAdresGrubu()">
                        <label for="adresEkle">Sevk Adresi Ekle</label>
                    </div>
                    <div id="adresGrubu" style="display: none;">
                        <div class="address-section">
                            <div class="form-group">
                                <label class="form-label">√áIKI≈û ADRESƒ∞</label>
                                <textarea id="cikisAdresi" class="form-control" rows="4"></textarea>
                                <div style="margin-top: 8px;">
                                    <input type="text" class="form-control" placeholder="POSTA KODU" style="margin-bottom: 8px;" />
                                    <div style="display: flex; gap: 8px;">
                                        <input type="text" class="form-control" placeholder="ƒ∞L√áE" />
                                        <input type="text" class="form-control" placeholder="ƒ∞L" />
                                    </div>
                                    <div class="checkbox-group">
                                        <input type="checkbox" id="cikis_ayni">
                                        <label for="cikis_ayni">√áƒ±kƒ±≈ü adresi tedarik√ßi adresi ile aynƒ±</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">SEVKƒ∞YAT ADRESƒ∞</label>
                                <textarea id="sevkiyatAdresi" class="form-control" rows="4"></textarea>
                                <div style="margin-top: 8px;">
                                    <input type="text" class="form-control" placeholder="POSTA KODU" style="margin-bottom: 8px;" />
                                    <div style="display: flex; gap: 8px;">
                                        <input type="text" class="form-control" placeholder="ƒ∞L√áE" />
                                        <input type="text" class="form-control" placeholder="ƒ∞L" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Ara√ß Bilgileri -->
                <div class="form-section">
                    <div class="section-title">ARA√á Bƒ∞LGƒ∞LERƒ∞</div>
                    <div class="form-group-inline">
                        <input type="text" id="aracPlakasi" class="form-control" placeholder="ARA√á PLAKASI" />
                        <input type="text" id="sofor" class="form-control" placeholder="≈ûOF√ñR EKLE" />
                    </div>
                </div>

                <!-- E Fatura Tipi -->
                <div class="form-section">
                    <div class="form-group">
                        <label class="form-label">E FATURA</label>
                        <select id="efaturaTipi" class="form-control">
                            <option value=""></option>
                            <option value="1">√ñdeme ≈ûekli</option>
                            <option value="2">√ñdeme ≈ûekli ve ƒ∞stisna</option>
                            <option value="3">ƒ∞stisna</option>
                            <option value="4">D√∂vizli ƒ∞stisna</option>
                            <option value="5">Tevkifat</option>
                            <option value="6">D√∂vizli</option>
                            <option value="7">ƒ∞hracat (D√∂vizli)</option>
                            <option value="8">√ñzel Matrah</option>
                            <option value="9">ƒ∞hra√ß Kayƒ±tlƒ±</option>
                            <option value="10">SGK</option>
                            <option value="11">√ñdeme ≈ûekli ve Tevkifat</option>
                            <option value="12">ƒ∞hracat (TR)</option>
                            <option value="13">D√∂viz + Tevkifat</option>
                        </select>
                    </div>
                </div>

                <!-- D√∂viz Bilgileri (D√∂vizli tiplerde g√∂r√ºn√ºr) -->
                <div class="form-section" id="dovizSection" style="display: none;">
                    <div class="form-group-inline">
                        <select id="dovizCinsi" class="form-control">
                            <option value="TRY">TRY</option>
                            <option value="USD">USD</option>
                            <option value="EUR">EUR</option>
                            <option value="GBP">GBP</option>
                        </select>
                        <input type="number" id="kur" class="form-control" placeholder="Kur" step="0.0001" value="1.0000" />
                    </div>
                </div>

                <!-- ƒ∞stisna Bilgileri (ƒ∞stisna i√ßeren tiplerde g√∂r√ºn√ºr) -->
                <div class="form-section" id="istisnaSection" style="display: none;">
                    <div class="form-group-inline">
                        <input type="text" id="istisnaKodu" class="form-control" placeholder="ƒ∞stisna Kodu" />
                        <input type="text" id="istisnaAciklama" class="form-control" placeholder="ƒ∞stisna A√ßƒ±klamasƒ±" />
                    </div>
                </div>

                <!-- SGK Bilgisi (SGK tipinde g√∂r√ºn√ºr) -->
                <div class="form-section" id="sgkSection" style="display: none;">
                    <div class="form-group">
                        <input type="text" id="sgkNo" class="form-control" placeholder="SGK Evrak No" />
                    </div>
                </div>

                <!-- √úr√ºn Tablosu -->
                <div class="form-section">
                    <table class="product-table">
                        <thead>
                            <tr>
                                <th style="width: 30%;">Hƒ∞ZMET / √úR√úN</th>
                                <th style="width: 10%;">Mƒ∞KTAR</th>
                                <th style="width: 10%;">Bƒ∞Rƒ∞M</th>
                                <th style="width: 15%;">BR. Fƒ∞YAT</th>
                                <th style="width: 10%;">VERGƒ∞(KDV)</th>
                                <th style="width: 15%;">TOPLAM</th>
                                <th style="width: 5%;"></th>
                            </tr>
                        </thead>
                        <tbody id="productTableBody">
                            <tr>
                                <td>
                                    <div class="product-search-container">
                                        <input type="text" placeholder="√úr√ºn/Hizmet" readonly />
                                        <span class="search-icon-right" onclick="openStokModal(this.previousElementSibling)">üîç</span>
                                    </div>
                                </td>
                                <td><input type="number" placeholder="" step="0.01" /></td>
                                <td>
                                    <select class="form-control">
                                        <option>Adet</option>
                                        <option>Kg</option>
                                        <option>Gr</option>
                                        <option>Ton</option>
                                        <option>Litre</option>
                                        <option>Metre</option>
                                    </select>
                                </td>
                                <td><input type="number" placeholder="" step="0.01" /></td>
                                <td>
                                    <select class="form-control">
                                        <option value="0">%0</option>
                                        <option value="1">%1</option>
                                        <option value="10">%10</option>
                                        <option value="20">%20</option>
                                    </select>
                                </td>
                                <td><input type="number" placeholder="" step="0.01" readonly /></td>
                                <td style="text-align: center;">
                                    <button class="btn-expand" onclick="toggleRowDetails(this)">+</button>
                                    <button class="btn-delete" onclick="removeRow(this)">√ó</button>
                                </td>
                            </tr>
                            <tr class="row-details" style="display: none;">
                                <td colspan="7">
                                    <div class="detail-fields">
                                        <div class="detail-row">
                                            <label>A√áIKLAMA</label>
                                            <input type="text" class="form-control" placeholder="A√ßƒ±klama giriniz" />
                                            <button class="btn-close-detail" onclick="closeRowDetails(this)">√ó</button>
                                        </div>
                                        <div class="detail-row">
                                            <label>TEVKƒ∞FAT ORANI</label>
                                            <select class="form-control">
                                                <option value="0">%0</option>
                                                <option value="15">%15</option>
                                                <option value="20">%20</option>
                                            </select>
                                        </div>
                                        <div class="detail-row">
                                            <label>√ñTV</label>
                                            <input type="number" class="form-control" placeholder="" step="0.01" />
                                            <span class="percentage">%</span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    
                    <div class="product-summary">
                        <button class="btn-add-row" onclick="addProductRow()">+ YENƒ∞ SATIR EKLE</button>
                        
                        <div class="summary-section">
                            <div class="summary-item">
                                <label>ARA TOPLAM</label>
                                <span class="summary-value">‚Ç∫</span>
                            </div>
                            <div class="summary-item">
                                <label>TOPLAM KDV</label>
                                <span class="summary-value">‚Ç∫</span>
                            </div>
                            <div class="summary-item total">
                                <label>GENEL TOPLAM</label>
                                <span class="summary-value">‚Ç∫</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn-cancel" onclick="closeModal()">Vazge√ß</button>
            <button class="btn-save" onclick="saveFatura(true)">Kaydet & G√∂r√ºnt√ºle</button>
            <button class="btn-save" onclick="saveFatura(false)">Kaydet</button>
        </div>
    </div>
</div>

<!-- Cari Modal -->
<div class="modal-overlay" id="cariModal">
    <div class="modal-container">
        <div class="modal-header">
            <button class="modal-close" onclick="closeCariModal()">√ó</button>
        </div>
        <div class="modal-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Carikodu</th>
                        <th>Unvan</th>
                    </tr>
                </thead>
                <tbody>
                   
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Depo Modal -->
<div class="modal-overlay" id="depoModal">
    <div class="modal-container">
        <div class="modal-header">
            <button class="modal-close" onclick="closeDepoModal()">√ó</button>
        </div>
        <div class="modal-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Depo Kodu</th>
                        <th>Depo Adƒ±</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- API'den gelecek veriler -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Stok Modal -->
<div class="modal-overlay" id="stokModal">
    <div class="modal-container">
        <div class="modal-header">
            <button class="modal-close" onclick="closeStokModal()">√ó</button>
        </div>
        <div class="modal-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Stok Kodu</th>
                        <th>Stok Adƒ±</th>
                        <th>Birim</th>
                        <th>Fiyat</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- API'den gelecek veriler -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    // Global deƒüi≈ükenler
    let selectedCariId = null;
    let selectedDepoId = null;
    let selectedStokData = {};

    function openModal() {
        document.getElementById('faturaModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('faturaModal').style.display = 'none';
    }

    // Cari Modal
    function openCariModal() {
        document.getElementById('cariModal').style.display = 'block';
        loadCariler();
    }

    function closeCariModal() {
        document.getElementById('cariModal').style.display = 'none';
    }

    function loadCariler() {
        console.log('Cariler y√ºkleniyor...');
        fetch('/api/fatura/cariler')
        .then(response => {
            console.log('Response status:', response.status);
            console.log('Response headers:', response.headers);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(cariler => {
            console.log('Gelen cariler:', cariler);
            
            if (cariler.error) {
                throw new Error(cariler.error + (cariler.details ? ': ' + cariler.details : ''));
            }
            
            const tbody = document.querySelector('#cariModal tbody');
            tbody.innerHTML = '';
            
            if (!cariler || cariler.length === 0) {
                tbody.innerHTML = '<tr><td colspan="2">Kayƒ±tlƒ± cari bulunamadƒ±</td></tr>';
                return;
            }
            
            cariler.forEach(cari => {
                const row = document.createElement('tr');
                row.onclick = () => selectCari(cari.id, cari.carikodu, cari.unvan);
                row.style.cursor = 'pointer';
                row.innerHTML = `
                    <td>${cari.carikodu || ''}</td>
                    <td>${cari.unvan}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Cariler y√ºklenemedi:', error);
            Swal.fire('Hata', 'Cariler y√ºklenirken hata olu≈ütu: ' + error.message, 'error');
            
            const tbody = document.querySelector('#cariModal tbody');
            tbody.innerHTML = '<tr><td colspan="2">Hata: ' + error.message + '</td></tr>';
        });
    }

    function selectCari(id, kodu, unvan) {
        selectedCariId = id;
        document.getElementById('tedarikci').value = unvan;
        closeCariModal();
    }

    // Depo Modal
    function openDepoModal() {
        document.getElementById('depoModal').style.display = 'block';
        loadDepolar();
    }

    function closeDepoModal() {
        document.getElementById('depoModal').style.display = 'none';
    }

    function loadDepolar() {
        fetch('/api/fatura/depolar')
        .then(response => response.json())
        .then(depolar => {
            const tbody = document.querySelector('#depoModal tbody');
            tbody.innerHTML = '';
            depolar.forEach(depo => {
                const row = document.createElement('tr');
                row.onclick = () => selectDepo(depo.id, depo.depo_kodu, depo.depo_adi);
                row.innerHTML = `
                    <td>${depo.depo_kodu || ''}</td>
                    <td>${depo.depo_adi}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Depolar y√ºklenemedi:', error);
            Swal.fire('Hata', 'Depolar y√ºklenirken hata olu≈ütu', 'error');
        });
    }

    function selectDepo(id, kodu, adi) {
        selectedDepoId = id;
        document.getElementById('depo').value = adi;
        closeDepoModal();
    }

    // Stok Modal
    let currentStokInput = null;

    function openStokModal(inputElement) {
        currentStokInput = inputElement;
        document.getElementById('stokModal').style.display = 'block';
        loadStoklar();
    }

    function closeStokModal() {
        document.getElementById('stokModal').style.display = 'none';
        currentStokInput = null;
    }

    function loadStoklar() {
        fetch('/api/fatura/stoklar')
        .then(response => response.json())
        .then(stoklar => {
            const tbody = document.querySelector('#stokModal tbody');
            tbody.innerHTML = '';
            stoklar.forEach(stok => {
                const row = document.createElement('tr');
                row.onclick = () => selectStok(stok.id, stok.stok_kodu, stok.stok_adi, stok.birim, stok.fiyat1);
                row.innerHTML = `
                    <td>${stok.stok_kodu || ''}</td>
                    <td>${stok.stok_adi}</td>
                    <td>${stok.birim || ''}</td>
                    <td>${stok.fiyat1 || '0,00'} ‚Ç∫</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Stoklar y√ºklenemedi:', error);
            Swal.fire('Hata', 'Stoklar y√ºklenirken hata olu≈ütu', 'error');
        });
    }

    function selectStok(id, kodu, adi, birim, fiyat) {
        if (currentStokInput) {
            const row = currentStokInput.closest('tr');
            
            // √úr√ºn adƒ±nƒ± input'a yaz
            currentStokInput.value = adi;
            
            // Birim se√ßimini g√ºncelle
            const birimSelect = row.querySelector('td:nth-child(3) select');
            if (birimSelect && birim) {
                for (let option of birimSelect.options) {
                    if (option.value === birim) {
                        option.selected = true;
                        break;
                    }
                }
            }
            
            // Fiyatƒ± g√ºncelle
            const fiyatInput = row.querySelector('td:nth-child(4) input');
            if (fiyatInput && fiyat) {
                fiyatInput.value = parseFloat(fiyat).toFixed(2);
            }
            
            // Stok bilgisini sakla
            const rowIndex = Array.from(row.parentNode.children).indexOf(row);
            selectedStokData[rowIndex] = {
                id: id,
                kodu: kodu,
                adi: adi,
                birim: birim,
                fiyat: fiyat
            };
            
            // Toplam hesapla
            calculateRowTotal(row);
        }
        closeStokModal();
    }

    // E-Fatura tipi kurallarƒ±
    function isDovizliTip(tip) {
        return tip === '4' || tip === '6' || tip === '7' || tip === '13';
    }

    function isIstisnaliTip(tip) {
        return tip === '2' || tip === '3' || tip === '4' || tip === '7' || tip === '12';
    }

    function isTevkifatliTip(tip) {
        return tip === '5' || tip === '11' || tip === '13';
    }

    function isSgkTip(tip) {
        return tip === '10';
    }

    function applyEfaturaTypeRules() {
        const select = document.getElementById('efaturaTipi');
        if (!select) return;
        const tip = select.value;

        document.getElementById('dovizSection').style.display = isDovizliTip(tip) ? 'block' : 'none';
        document.getElementById('istisnaSection').style.display = isIstisnaliTip(tip) ? 'block' : 'none';
        document.getElementById('sgkSection').style.display = isSgkTip(tip) ? 'block' : 'none';

        const rows = document.querySelectorAll('#productTableBody tr:not(.row-details)');
        rows.forEach(row => {
            const detail = row.nextElementSibling;
            if (!detail || !detail.classList.contains('row-details')) return;
            if (isTevkifatliTip(tip)) {
                detail.style.display = 'table-row';
                const btn = row.querySelector('.btn-expand');
                if (btn) { btn.textContent = '-'; btn.style.backgroundColor = '#dc3545'; }
                const tevkifatSelect = detail.querySelector('.detail-row:nth-child(2) select');
                if (tevkifatSelect) tevkifatSelect.disabled = false;
            } else {
                const tevkifatSelect = detail.querySelector('.detail-row:nth-child(2) select');
                if (tevkifatSelect) tevkifatSelect.value = '0';
            }
        });
    }

    // √úr√ºn tablosuna satƒ±r ekleme
    function addProductRow() {
        const tbody = document.getElementById('productTableBody');
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
            <td>
                <div class="product-search-container">
                    <input type="text" placeholder="√úr√ºn/Hizmet" readonly />
                    <span class="search-icon-right" onclick="openStokModal(this.previousElementSibling)">üîç</span>
                </div>
            </td>
            <td><input type="number" placeholder="" step="0.01" onchange="calculateRowTotal(this.closest('tr'))" /></td>
            <td>
                <select class="form-control" onchange="calculateRowTotal(this.closest('tr'))">
                    <option>Adet</option>
                    <option>Kg</option>
                    <option>Gr</option>
                    <option>Ton</option>
                    <option>Litre</option>
                    <option>Metre</option>
                </select>
            </td>
            <td><input type="number" placeholder="" step="0.01" onchange="calculateRowTotal(this.closest('tr'))" /></td>
            <td>
                <select class="form-control" onchange="calculateRowTotal(this.closest('tr'))">
                    <option value="0">%0</option>
                    <option value="1">%1</option>
                    <option value="10">%10</option>
                    <option value="20">%20</option>
                </select>
            </td>
            <td><input type="number" placeholder="" step="0.01" readonly /></td>
            <td style="text-align: center;">
                <button class="btn-expand" onclick="toggleRowDetails(this)">+</button>
                <button class="btn-delete" onclick="removeRow(this)">√ó</button>
            </td>
        `;
        
        // Detay satƒ±rƒ±nƒ± da ekle
        const detailRow = document.createElement('tr');
        detailRow.className = 'row-details';
        detailRow.style.display = 'none';
        detailRow.innerHTML = `
            <td colspan="7">
                <div class="detail-fields">
                    <div class="detail-row">
                        <label>A√áIKLAMA</label>
                        <input type="text" class="form-control" placeholder="A√ßƒ±klama giriniz" />
                        <button class="btn-close-detail" onclick="closeRowDetails(this)">√ó</button>
                    </div>
                    <div class="detail-row">
                        <label>TEVKƒ∞FAT ORANI</label>
                        <select class="form-control">
                            <option value="0">%0</option>
                            <option value="15">%15</option>
                            <option value="20">%20</option>
                        </select>
                    </div>
                    <div class="detail-row">
                        <label>√ñTV</label>
                        <input type="number" class="form-control" placeholder="15,00" step="0.01" />
                        <span class="percentage">%</span>
                    </div>
                </div>
            </td>
        `;
        
        tbody.appendChild(newRow);
        tbody.appendChild(detailRow);
    }

    // Satƒ±r silme
    function removeRow(button) {
        const row = button.closest('tr');
        const detailRow = row.nextElementSibling;
        if (detailRow && detailRow.classList.contains('row-details')) {
            detailRow.remove();
        }
        row.remove();
        calculateTotal();
    }

    // Satƒ±r toplamƒ±nƒ± hesapla
    function calculateRowTotal(row) {
        const miktar = parseFloat(row.querySelector('td:nth-child(2) input').value) || 0;
        const fiyat = parseFloat(row.querySelector('td:nth-child(4) input').value) || 0;
        const kdvOrani = parseFloat(row.querySelector('td:nth-child(5) select').value) || 0;
        
        const araToplam = miktar * fiyat;
        const kdvTutari = (araToplam * kdvOrani) / 100;
        const toplam = araToplam + kdvTutari;
        
        row.querySelector('td:nth-child(6) input').value = toplam.toFixed(2);
        calculateTotal();
    }

    // Genel toplam hesapla
    function calculateTotal() {
        let araToplam = 0;
        let kdvToplam = 0;
        
        const rows = document.querySelectorAll('#productTableBody tr:not(.row-details)');
        rows.forEach(row => {
            const miktar = parseFloat(row.querySelector('td:nth-child(2) input').value) || 0;
            const fiyat = parseFloat(row.querySelector('td:nth-child(4) input').value) || 0;
            const kdvOrani = parseFloat(row.querySelector('td:nth-child(5) select').value) || 0;
            
            const satirAraToplam = miktar * fiyat;
            const satirKdv = (satirAraToplam * kdvOrani) / 100;
            
            araToplam += satirAraToplam;
            kdvToplam += satirKdv;
        });
        
        const genelToplam = araToplam + kdvToplam;
        
        document.querySelector('.summary-section .summary-item:nth-child(1) .summary-value').textContent = araToplam.toFixed(2) + '‚Ç∫';
        document.querySelector('.summary-section .summary-item:nth-child(2) .summary-value').textContent = kdvToplam.toFixed(2) + '‚Ç∫';
        document.querySelector('.summary-section .summary-item:nth-child(3) .summary-value').textContent = genelToplam.toFixed(2) + '‚Ç∫';
    }

    // Fatura kaydetme
    function saveFatura(isView = false) {
        if (!selectedCariId) {
            Swal.fire('Uyarƒ±', 'L√ºtfen tedarik√ßi se√ßin!', 'warning');
            return;
        }
        if (!selectedDepoId) {
            Swal.fire('Uyarƒ±', 'L√ºtfen depo se√ßin!', 'warning');
            return;
        }

        const belgeno = document.querySelector('input[placeholder="Belge numarasƒ± giriniz"]').value;
        const fiiliSevkTarihi = document.getElementById('fiiliSevkTarihi').value;
        const cikisAdresi = document.getElementById('cikisAdresi').value;
        const sevkiyatAdresi = document.getElementById('sevkiyatAdresi').value;
        const aracPlakasi = document.getElementById('aracPlakasi').value;
        const sofor = document.getElementById('sofor').value;

        const urunler = [];
        const rows = document.querySelectorAll('#productTableBody tr:not(.row-details)');
        
        rows.forEach((row, index) => {
            const urunAdi = row.querySelector('input[placeholder="√úr√ºn/Hizmet"]').value;
            if (urunAdi) {
                const miktar = parseFloat(row.querySelector('td:nth-child(2) input').value) || 0;
                const birim = row.querySelector('td:nth-child(3) select').value;
                const fiyat = parseFloat(row.querySelector('td:nth-child(4) input').value) || 0;
                const kdvOrani = parseFloat(row.querySelector('td:nth-child(5) select').value) || 0;
                const toplam = parseFloat(row.querySelector('td:nth-child(6) input').value) || 0;
                
                // Detay satƒ±rƒ±ndan ek bilgileri al
                const detailRow = row.nextElementSibling;
                let aciklama = '';
                let tevkifatOrani = 0;
                let otv = 0;
                
                if (detailRow && detailRow.classList.contains('row-details')) {
                    aciklama = detailRow.querySelector('.detail-row:nth-child(1) input').value || '';
                    tevkifatOrani = parseFloat(detailRow.querySelector('.detail-row:nth-child(2) select').value) || 0;
                    otv = parseFloat(detailRow.querySelector('.detail-row:nth-child(3) input').value) || 0;
                }
                
                const stokData = selectedStokData[index];
                
                urunler.push({
                    urun_adi: urunAdi,
                    miktar: miktar,
                    birim: birim,
                    iskontorani: 0,
                    iskontotutar: 0,
                    kdvorani: kdvOrani,
                    tutar: toplam,
                    stokkayitno: stokData ? stokData.id : null,
                    aciklama: aciklama,
                    tevkifat_orani: tevkifatOrani,
                    otv: otv
                });
            }
        });

        if (urunler.length === 0) {
            Swal.fire('Uyarƒ±', 'L√ºtfen en az bir √ºr√ºn ekleyin!', 'warning');
            return;
        }

        // Toplamlarƒ± hesapla
        let araToplam = 0;
        let kdvToplam = 0;
        urunler.forEach(urun => {
            const satirAraToplam = urun.miktar * (urun.tutar / (1 + urun.kdvorani / 100));
            araToplam += satirAraToplam;
            kdvToplam += (satirAraToplam * urun.kdvorani / 100);
        });

        fetch('/api/fatura/gelen-fatura', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                carikayitno: selectedCariId,
                depokayitno: selectedDepoId,
                belgeno: belgeno,
                fiili_sevk_tarihi: fiiliSevkTarihi,
                cikis_adresi: cikisAdresi,
                sevkiyat_adresi: sevkiyatAdresi,
                arac_plakasi: aracPlakasi,
                sofor: sofor,
                efatura_tipi: (function(){ const el = document.getElementById('efaturaTipi'); if(!el) return null; const v = el.value; return v === '' ? null : parseInt(v); })(),
                doviz: (function(){ const tip = document.getElementById('efaturaTipi')?.value || ''; if(!(tip==='4'||tip==='6'||tip==='7'||tip==='13')) return null; return { cins: document.getElementById('dovizCinsi')?.value || 'TRY', kur: parseFloat(document.getElementById('kur')?.value || '1') }; })(),
                istisna: (function(){ const tip = document.getElementById('efaturaTipi')?.value || ''; if(!(tip==='2'||tip==='3'||tip==='4'||tip==='7'||tip==='12')) return null; return { kod: document.getElementById('istisnaKodu')?.value || '', aciklama: document.getElementById('istisnaAciklama')?.value || '' }; })(),
                sgkno: (function(){ const tip = document.getElementById('efaturaTipi')?.value || ''; if(tip!=='10') return null; return document.getElementById('sgkNo')?.value || null; })(),
                urunler: urunler,
                aratoplam: araToplam,
                kdvtoplam: kdvToplam,
                geneltoplam: araToplam + kdvToplam
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire('Ba≈üarƒ±lƒ±', 'Fatura ba≈üarƒ±yla kaydedildi! Fi≈ü No: ' + data.fisNo, 'success');
                if (isView) {
                    // Detay sayfasƒ±na y√∂nlendir
                    window.location.href = `/fatura/detay?id=${data.faturaId}`;
                } else {
                    closeModal();
                    location.reload(); // Sayfayƒ± yenile
                }
            } else {
                Swal.fire('Hata', data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Hata:', error);
            Swal.fire('Hata', 'Fatura kaydedilirken bir hata olu≈ütu.', 'error');
        });
    }

    // Checkbox fonksiyonu
    document.addEventListener('change', function(e) {
        if (e.target.id === 'cikis_ayni' && e.target.checked) {
            console.log('√áƒ±kƒ±≈ü adresi tedarik√ßi adresi ile aynƒ± olarak i≈üaretlendi');
        }
    });

    function toggleAdresGrubu() {
        const adresGrubu = document.getElementById('adresGrubu');
        adresGrubu.style.display = adresGrubu.style.display === 'none' ? 'block' : 'none';
    }

    function toggleRowDetails(button) {
        const currentRow = button.closest('tr');
        const detailRow = currentRow.nextElementSibling;
        
        if (detailRow.style.display === 'none') {
            detailRow.style.display = 'table-row';
            button.textContent = '-';
            button.style.backgroundColor = '#dc3545';
        } else {
            detailRow.style.display = 'none';
            button.textContent = '+';
            button.style.backgroundColor = '#28a745';
        }
    }

    function closeRowDetails(button) {
        const detailRow = button.closest('.row-details');
        const mainRow = detailRow.previousElementSibling;
        const expandButton = mainRow.querySelector('.btn-expand');
        
        detailRow.style.display = 'none';
        expandButton.textContent = '+';
        expandButton.style.backgroundColor = '#28a745';
    }

    // Faturalar y√ºkle
    function loadFaturalar() {
        fetch('/api/fatura/faturalar')
            .then(response => response.json())
            .then(data => {
                const tbody = document.getElementById('faturaTableBody');
                tbody.innerHTML = '';
                
                // API'den gelen veriler direkt array olarak geliyor
                if (!data || data.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="8" style="text-align: center;">Kayƒ±tlƒ± fatura bulunamadƒ±</td></tr>';
                    return;
                }

                data.forEach(fatura => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${fatura.fis_no || ''}</td>
                        <td>${fatura.belge_no || ''}</td>
                        <td>${fatura.tarih || ''}</td>
                        <td>${fatura.cari || ''}</td>
                        <td>${Number(fatura.tutar || 0).toFixed(2)} ‚Ç∫</td>
                        <td>
                            <span class="irsaliye-status">${fatura.durum || 'Bilinmiyor'}</span>
                        </td>
                        <td>${fatura.aciklama || ''}</td>
                        <td style="text-align:right;">
                            <div class="irsaliye-actions">
                                <button class="btn btn-light btn-sm" onclick="viewFatura(${fatura.id})"><i class="fas fa-eye"></i></button>
                                <button class="btn btn-light btn-sm" onclick="editFatura(${fatura.id})"><i class="fas fa-edit"></i></button>
                                <button class="btn btn-light btn-sm" onclick="deleteFatura(${fatura.id})"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
            })
            .catch(error => {
                console.error('Faturalar y√ºklenirken hata:', error);
                const tbody = document.getElementById('faturaTableBody');
                tbody.innerHTML = '<tr><td colspan="8" style="text-align: center;">Faturalar y√ºklenirken bir hata olu≈ütu</td></tr>';
            });
    }

    // Fatura g√∂r√ºnt√ºleme fonksiyonu
    function viewFatura(id) {
        // Detay sayfasƒ±na y√∂nlendir
        window.location.href = `/fatura/detay?id=${id}`;
    }

    // Fatura d√ºzenleme fonksiyonu
    function editFatura(id) {
        // TODO: Fatura d√ºzenleme i≈ülemleri
        console.log('Fatura d√ºzenle:', id);
    }

    // Fatura silme fonksiyonu
    function deleteFatura(id) {
        if (confirm('Bu faturayƒ± silmek istediƒüinizden emin misiniz?')) {
            // TODO: Fatura silme i≈ülemleri
            console.log('Fatura sil:', id);
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Faturalar y√ºkle
        loadFaturalar();
        const efaturaSelect = document.getElementById('efaturaTipi');
        if (efaturaSelect) {
            efaturaSelect.addEventListener('change', applyEfaturaTypeRules);
            applyEfaturaTypeRules();
        }
        const firstRow = document.querySelector('#productTableBody tr');
        if (firstRow) {
            const inputs = firstRow.querySelectorAll('input[type="number"], select');
            inputs.forEach(input => {
                input.addEventListener('change', () => calculateRowTotal(firstRow));
            });
            
            const stokInput = firstRow.querySelector('input[placeholder="√úr√ºn/Hizmet"]');
            const searchIcon = firstRow.querySelector('.search-icon-right');
            if (searchIcon) {
                searchIcon.onclick = () => openStokModal(stokInput);
            }
        }
    });
</script>

<script src="/js/script.js"></script>
</body>
</html> 